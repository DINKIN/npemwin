#
# $Id$
#

# Common section
## set archive(conf)    [file join $gf(confdir) "archive.conf"];
## set archive(datadir) [file join $gf(archivedir) "data"];
## set archive(invdir)  [file join $gf(archivedir) "inv"];

# Per-filter parameters for the archiver
#
# The archiver is disabled by default. If it is enabled by setting the
# variable archive(<filter>,enable) to 1 or 2.
# If the setting is 1, than a copy of all the data is saved
# permamently (it is not "pruned" by the hourly cleanup script) in the
# archive directory. A setting of 2 also enables the archive
# but it disables the usual mode of saving the data. The "regex"
# variable can be used to select/omit the files that are archived.

#
# dafilter
#
## set archive(da,datadir) [file join $archive(datadir) "digatmos"];
## set archive(da,subdirfmt) "%Y/%m/%d";
## set archive(da,invdir) [file join $archive(invdir) "digatmos"];
## set archive(da,inv_subdirfmt) "%Y%m%d";   # based on arrival time
## set archive(da,inv_namefmt) "%H%M.inv";   # based on arrival time

## set archive(da,enable) 0;
## set archive(da,regex) {.*};

#
# Read the local overrides
#
set _confname "archive.conf"

if {[info exists source_archive_conf_defined]} {
    return;
}
set source_archive_conf_defined 1;

foreach _d $gf(localconfdirs) {
    set _localconfname ${_d}/${_confname}
    if {[file exists ${_localconfname}] == 1} {
        source ${_localconfname};
    }
}
unset _d;
unset _confname;
unset _localconfname;
