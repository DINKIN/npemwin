#!%TCLSH%
#
# $Id$
#

## The common defaults
set _defaultsfile "/usr/local/etc/npemwin/filters.conf";
if {[file exists ${_defaultsfile}] == 0} {
    puts "stdfilter disabled: ${_defaultsfile} not found.";
    return 1;
}
source ${_defaultsfile};
unset _defaultsfile;

## The filter library
if {[file exists $gf(filterlib)] == 0} {
        puts "stdfilter disabled: $gf(filterlib) not found.";
        return 1;
}
source $gf(filterlib);

# Default configuration is in the init file because it is shared with
# the http server.
set _initfile [file join $gf(filterdir) "stdfilter.init"];
if {[file exists ${_initfile}] == 0} {
    puts "stdfilter disabled: ${_initfile} not found.";
    return 1;
}
source ${_initfile};
unset _initfile;
#
# variables
set stdfilter(rcfiles)	[list];
set stdfilter(condition)	[list];
set stdfilter(action)		[list];

# The main rc file is required
if {[file exists $stdfilter(rc)] == 0} {
    log_msg "Filter disabled: $stdfilter(rc) not found.";
    return 1;
}

# Build the list of rc files
set stdfilter(rcfiles) [concat $stdfilter(defaultsrc) \
	[filterlib_get_rcfiles [file tail $stdfilter(rc)] \
        $stdfilter(confdirs) $stdfilter(rcdir) $stdfilter(postrc)]];

# Load the rules sets
source $stdfilter(rc);

proc main {} {

    global errorInfo;

    while {[gets stdin line] >= 0} {
	if {[regexp {^\s*$} $line]} {
	    continue;
	}
	set args [split $line];
	set argsc [llength $args];
    	if {$argsc != 2} {
            log_msg "Incorrect number of arguments: $args";
	    continue;
        }

    	set prodname [lindex $args 0];
    	set fpath [lindex $args 1];
    
        set status [catch {process $prodname $fpath} errmsg];
	if {$status == 1} {
	    log_msg "Error processing $prodname";
	    log_msg $errmsg;
	    log_msg $errorInfo;
	}
    }
}

proc process {prodname fpath} {

    global stdfilter;

    filterlib_get_rcvars rc $prodname $fpath;

    set rc_status 1;

    # Evaluate the condition/action pairs, from all sets.
    set status [catch {
	set i 0;		# counts the sets
	foreach condlist $stdfilter(condition) {
	    set actionlist [lindex $stdfilter(action) $i];
	    set j 0;	# counts the rules with each set
	    foreach c $condlist {
		set a [lindex $actionlist $j];
		if {[expr $c]} {
		    eval $a;
		}
		incr j;
	    }
	    incr i;
	}
    } errmsg];

    if {$status == 1} {
	log_msg "Error processing $fpath";
	log_msg $errmsg;
    }
}

main
